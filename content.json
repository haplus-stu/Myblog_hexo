{"pages":[],"posts":[{"title":"私のN高でのプログラミング学習のお話","text":"私がN高に入ってから今に至るまでの経緯 はじめにはじめましてはすと言います。2019年7月よりN高等学校に在籍しています。今回はじめて記事を書きます。よろしくお願いいたします。 この記事についてこの記事はN高等学校アドベントカレンダー14日目の記事です。この記事では今年自分がやってきたこと、成長できた点、課題点などを記事にしています。 今年の主な出来事N高等学校入学前のレベル基本的な文法(条件分岐、ループ)等は理解していたが実践的なことができなかった。 今年の主な出来事・2019年7月 N高等学校転入学・2019年8月 HTML,JavaScriptの勉強を開始・2019年9月 ITパスポート試験受験※11月16日合格・2019年10月 第一作目タイマーアプリ完成・2019年11月 第二作目文字数カウントメモアプリ完成 一年を通して学んだこと感じたことコードを「読む」ということの大切さN高に入るまで人のコードを読んで理解することをほとんどしていなかったのですが、N高に入り他人のコードを見る機会が増え、それを理解していくことで段々とコードが理解できるようになり入学前にできなかった「実践的なコード」を書くことができるようになっていきました。 コードを理解できるようになると自分に足りないものが明確に浮かび上がり学習効率も格段に上がりました。そのうえで自分は入学前に読んでいた参考書をもう一度読み直しました。すると当時は理解できなかったことがスルスルと頭に入ってきました。 とりあえずなんでもやってみるということ 素人の頭で考えてもできることは限られているので、とりあえずどこかに発信してみることで誰かにフィードバックをもらおうと考えました。 「自分が作ったアプリなんて…」 と思っていましたが、今自分よりもはるか上のレベルにいる人でも最初はこのぐらいのレベルだったはずだと思い、自信をを持って周りに作ったものを公開しました。そうすると「すごい！」、「もっとこうしたほうがいい」と言った温かいコメントをたくさんいただくことができとても自信に繋がりました。何かを見せるということはとてつもない勇気が必要でしたが、その勇気が自分を大きく成長させてくれたんだと感じています。 課題点課題点としては、・Gitやその他ツールを有効活用できていない・データベースの知識があまり身についていないこの2つが早急に改善すべき点だと考えています。来年はこの部分を改善できるように努力をしていきたいと思います。 最後に自分にとってこの一年間はとても有意義なものとなりました。これからももっとプログラミングスキルをアップさせていけるように学習をしていきたいと思います。 フィードバックをくださったN高の方々や協力してくださった方々本当にありがとうございました。","link":"/Myblog_hexo/2019/12/03/2020-03-26-blog02/"},{"title":"タイマーアプリを作ってみた","text":"このアプリは私がプログラミングの学習をはじめて最初にアウトプットとして作ったものになります。自分は時間を忘れて没頭する癖があるので抑止力として作りました。まぁタイマーアプリなんて山ほどあるのでタイマーの説明は省きます（おい… このアプリを作った経緯このアプリは私がプログラミングの学習をはじめて最初にアウトプットとして作ったものになります。自分は時間を忘れて没頭する癖があるので抑止力として作りました。まぁタイマーアプリなんて山ほどあるのでタイマーの説明は省きます（おいというわけでとりあえず本題に入りましょう。 本題コードはgithubに公開しています。すぐに利用できるものはこちらにありますこのタイマーはスタートを押すと休憩ボタンが押せなくなりますがこれは仕様です。理由としては・スタート中に休憩を押せないようにして集中するしかない状態を少しでも作りたかったからこの一点に尽きます。このコードで自分が力を入れた部分は値の取得部分です。自分は時間の設定のためにinputタグを使っています。その要素を取得するためには 1document.timer.elements[].value というコードを集中時間の分秒、休憩時間の分秒の４つ書く必要がありました。ですがこれだとコードの読みやすさが圧倒的に低く、あまりきれいなコードとは言えません。そこで自分は関数を使うことを考えました。そして出来上がったコードがこちらです。 1234567//時間の要素取得が多くなったので引数で指定できる関数化function need_timer_value(i) { if(document.timer.elements[i].value == \"\") { return document.timer.elements[i].value = 0; } return document.timer.elements[i].value;} こうすることで必要なときに 1need_timer_value(1) この一文を書いて引数を指定するだけで値が取得できるようになりました。 この関数は要素を取得するときにいつでも使えるのでとても便利だと感じています。 終わりに今回の記事では説明しませんでしたが、残り時間の計算方法などもとてもいい勉強になりました。この調子で少しずつ「できること」を増やしていけたら良いなと思っています。","link":"/Myblog_hexo/2019/12/26/2020-03-26-blog01/"},{"title":"あなたもやってしまってるかも？非効率な暗記法とその対策","text":"皆さんこんにちはこんばんは。はすです。 今回は勉強法についての記事を書いてみようと思います。 皆さんこんにちはこんばんは。はすです。 今回は勉強法についての記事を書いてみようと思います。というのも、私は幸せなことに周りから「記憶力がいい」と言っていただけることがあります。それと同時にどうしたらそんなに暗記ができるの？と聞かれます。なので自分の暗記法を共有したいと思います。 目次1 暗記ができないのはなぜ？ 2 暗記がしやすくなる方法 3 まとめ 暗記ができないのはなぜ？結論から言うと「やり方が非効率」であることが考えられます。私自身暗記に関して、地頭はあまり関係ないと思っています。では何が非効率なのかというと、時間配分にあります。 例えば英単語暗記をしようとしたとします。このときページには単語がいくつか書かれています。このときほとんどの人が、一つ一つに時間をかけ、１単語を何度も復唱し意味を覚えようとするかと思いますがこれはとても非効率です。 暗記がしやすくなる方法ではどうすればいいのか。私がよくやる方法として、 1周目 : １単語につき５秒程度で流し見をしていく。 2周目 : 覚えたいもの（この場合英単語）を使って例文を作ってみる。そして作った文を声に出す。 この2フェーズを1セットとして勉強をしています。 私がいつも意識しているのは、「高い回転率」と「実際に自分がその知識を使うことを想像する」ということです。 時間をかけて覚えたとしても反復をして長期記憶に定着しなければ意味がありません。ですから短い時間を何回も繰り返すことで、脳に重要な情報であると認識させ、長期記憶に定着させることが重要になってきます。 そして殆どの暗記物が「試験に受かるため」ではなく「将来その知識が必要とされるときに実際に使うことができるようにするため」に暗記をすると思います。なのでいくら知識として定着しても使うシチュエーションを理解していなければこれも意味がなくなってしまいます。だからこそ、その知識をどういうふうに使うことができるかを考え、実際に使ってみることで記憶に定着しやすくなります。 まとめいかがだったでしょうか。私の暗記法を語ってきましたが、これはあくまでも私のやり方であり、合う合わないはあると思います。絶対ではなく参考程度に見ていただけると嬉しいです。最後までありがとうございました。","link":"/Myblog_hexo/2020/04/21/%E5%8B%89%E5%BC%B7%E6%B3%95%E8%A8%98%E4%BA%8B/"},{"title":"Qiitaの炎上について思うこと","text":"こんにちは。こんばんは。今回の記事はこのブログを開設するきっかけにもなったqiitaの炎上について思うことを記事にしようと思います。 こんにちは。こんばんは。今回の記事はこのブログを開設するきっかけにもなったqiitaの炎上について思うことを記事にしようと思います。 qiitaはなぜ炎上した？皆さんご存知だとは思いますが、3月25日深夜から「qiitaでの閲覧記事やアクセスログが突如ユーザーページで公開されている」とTwitterでの投稿が相次ぎました。 qiitaは26日に「技術スキルなどのエンジニアとしての自己表現をより広げることができるのではないか、という仮説のもと追加した」としたうえで、「早急に取り扱いに関する社内協議を全力で進め、適切に対応していく」とコメントを出した上で現在は機能を停止しています。 オプトアウトができるということでリンクにアクセスすると、全く関係のないサイトに飛ばされるということでも炎上しました。 今回の炎上について思うことユーザーのアクセスログを公開することはプライバシーに厳しい現代社会でグレーゾーンになるかもととは思わなかったのだろうか？ デフォルトでオフにした状態でリリースすることは考えなかったのか？デフォルトオンでオプトアウトできないはあまりにもおかしい。ユーザーの信頼を失うのも至極当然だと思う。 「技術スキルなどのエンジニアとしての自己表現をより広げることができるのではないか、という仮説のもと追加した」というのであれば事前にユーザーに向けてそれとなく機能の追加の是非を聞くことはできなかったのか？そうすればもっと小さな炎上でおさまったのでは？ 最後に初めての記事で結構強めに言ってしまいしたが、qiitaはとてもお世話になっていたサイトで、アドカレなども楽しかったので、これからのqiitaの対応を見て完全にqiitaから離脱するのかを検討したいと思います。","link":"/Myblog_hexo/2020/03/27/2020-03-27-blog03/"}],"tags":[{"name":"プログラミング","slug":"プログラミング","link":"/Myblog_hexo/tags/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"},{"name":"雑談","slug":"雑談","link":"/Myblog_hexo/tags/%E9%9B%91%E8%AB%87/"},{"name":"JavaScript","slug":"JavaScript","link":"/Myblog_hexo/tags/JavaScript/"},{"name":"作ってみた","slug":"作ってみた","link":"/Myblog_hexo/tags/%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/"},{"name":"勉強法","slug":"勉強法","link":"/Myblog_hexo/tags/%E5%8B%89%E5%BC%B7%E6%B3%95/"}],"categories":[]}